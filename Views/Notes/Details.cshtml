@model OnlineNotes.Models.Note

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

@*Makes the text warp to prevent horizontal scrolling*@
<style>
    pre {
        overflow-x: auto;
        white-space: pre-wrap;
    }
</style>

<div>
    <h4>Note</h4>
    <hr />
    @if (Model.Ratings.Any())
    {
        <!--TODO rated by x users-->
        <p>Rating: @(Model.AvgRating.ToString())/5  Rated by: @(Model.Ratings.Count) @{
                if (Model.Ratings.Count == 1)
                {
                                    <text>user</text>
                } else
                {
                                    <text>users</text>
                }}
                </p>

    } else
    {
        <p>There are no ratings yet for this post</p>
    }
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Contents)
        </dt>
        <dd class = "col-sm-12">
            <pre>@Html.DisplayFor(model => model.Contents)</pre>
        </dd>

        <div align="right" background: blue> @ViewBag.Count words</div>

        <div id="explainField" hidden>
            <dt class="col-sm-2">
                Explained like you're 5
            </dt>
            <dd class="col-sm-12" id="resultField">
                
            </dd>
        </div>

    </dl>
</div>

<div>
    <h4>Rate this note</h4>

    <form asp-action="SubmitRating" asp-controller="Notes" method="post" onsubmit="return validateForm();" style="display: flex; flex-direction: row; align-items: flex-end;">
        <div class="stars" style="margin-right: 50px;">
        <input type="radio" id="star1" name="rating" value="1" />
        <input type="radio" id="star2" name="rating" value="2" />
        <input type="radio" id="star3" name="rating" value="3" />
        <input type="radio" id="star4" name="rating" value="4" />
        <input type="radio" id="star5" name="rating" value="5" />

        <label for="star1" aria-label="Banana">1 star</label>
        <label for="star2">2 stars</label>
        <label for="star3">3 stars</label>
        <label for="star4">4 stars</label>
        <label for="star5">5 stars</label>

        <input type="hidden" name="noteId" value="@Model.Id" />
    </div>
        <button type="submit" class="btn btn-dark btn-sm" style="width: 120px; height: 35px;">Submit</button>
    </form>

    <br />
    <hr />
</div>

<div>
    <h4>Comments</h4>
    <hr />
   
    @if (Model.Comments.Any())
    {
        <table class="table">
            <tr>
                <th></th>
                <th>Date Created</th>
                <th></th>
            </tr>
            <tbody>
            @foreach (var comment in Model.Comments)
            {
                <tr>
                    <td>
                        @comment.Contents
                    </td>
                    <td>
                        @comment.CreationDate
                    </td>
                    <td>
                            <a class="btn btn-danger btn-sm" asp-controller="Comments" asp-action="Delete" asp-route-Id="@comment.Id">Delete</a>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    } else
    {
        <p> There are no comments to display</p>
    }
</div>

<div>
    <button class="btn btn-info" id="explainButton" style="margin-bottom:10px">Explain it like im 5</button>
</div>
<div>
    <a class="btn btn-secondary" asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
    <a class="btn btn-primary" asp-action="Index">Back to List</a>
    <a class="btn btn-outline-info" asp-controller="Comments" asp-action="Create" asp-route-noteId="@Model?.Id">Write a comment</a>
</div>

@section scripts {
    <script>
        document.getElementById("explainButton").addEventListener("click", function () {
            // Get the user input from the text input field
            var userInput = "explain it like im 5: @Model.Contents";

            // Send a request to the action with the user input
            fetch('@Url.Action("ExplainTask", "Notes")?input=' + encodeURIComponent(userInput))
                .then(response => response.text())
                .then(text => {
                    document.getElementById("explainField").removeAttribute("hidden");
                    // Display the returned text in the resultDiv
                    document.getElementById("resultField").innerText = text;
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        });
    </script>

    <script>
        function validateForm() {
            var radioButtons = document.getElementsByName('rating');
            var radioButtonSelected = false;

            for (var i = 0; i < radioButtons.length; ++i) {
                if (radioButtons[i].checked) {
                    radioButtonSelected = true;
                    break;
                }
            }

            if (radioButtonSelected) {
                return true;
            }

            alert('Please select a rating before submitting')
            return false;
        }
    </script>
}
